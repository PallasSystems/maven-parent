stages:
 - release

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s .gitlab-ci/maven_settings.xml"

# This template uses jdk8 for verifying and deploying images
image: maven:3.8.2-openjdk-11

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .m2/repository
    - .sonar/cache

setup_git:
  stage: .pre
  script:
    - git config --global user.email "gitlab@crobar.uk"
    - git config --global user.name "Gitlab Runner"
    - export "BRANCH_NAME=$(echo ${CI_COMMIT_REF_NAME} | tr / - | sed 's/release-*//\')";
    - 'echo "Exported branch is: $BRANCH_NAME"'
    - "git fetch --all"
    - "git checkout -b $BRANCH_NAME"
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^release\/.*$/i

release:
  stage: release
  script:
    - export "BRANCH_NAME=$(echo ${CI_COMMIT_REF_NAME} | tr / - | sed 's/release-*//\')";
    - 'echo "Exported branch is: $BRANCH_NAME"'
    - 'echo "mvn $MAVEN_CLI_OPTS release:prepare -DreleaseVersion=$BRANCH_NAME -Dproject.id=$CI_PROJECT_ID -Dgoals=clean,jacoco:prepare-agent,deploy,jacoco:report,spotbugs:spotbugs,pmd:pmd,pmd:cpd,org.sonarsource.scanner.maven:sonar-maven-plugin:sonar"'
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^release\/.*$/i

fetch_all_branches:
  stage: .post
  script:
     - 'echo "Exported branch is: $BRANCH_NAME"'
     - 'echo "git checkout main"'
     - 'echo "git merge $BRANCH_NAME"'
     - 'echo "git push origin main"'
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^release\/.*$/i
